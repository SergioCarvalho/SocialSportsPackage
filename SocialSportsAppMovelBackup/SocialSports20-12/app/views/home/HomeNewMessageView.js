SocialSports.views.HomeNewMessage = Ext.extend(Ext.form.FormPanel, {		id: 'messageform',		defaultInstructions: 'Deve escolher o tema e hashtag associado antes de enviar a mensagem',				initComponent: function(){			var buttonsave, fields;						buttonsave = {				id: 'newMessageFormSaveButton',				xtype:'button',				cls: 'bt_preferences',				ui: 'action',				text: 'Enviar',				dock: 'bottom',				handler: this.onSaveAction,				scope: this			};						fields = {				xtype: 'fieldset',				id: 'newMessageFormFieldset',				instructions: this.defaultInstructions,				items: [					{					xtype: 'selectfield',					cls: 'bt_selectfield',                    name: 'tema',                    label: 'Tema',					options: [{						text: 'Equipa',						value: 'equipa'					},					{						text: 'Jogador',						value: 'jogador'					},					{						text: 'Evento',						value: 'evento'					},					],					},					{                    xtype: 'SocialSports.views.ErrorField',                    fieldname: 'tema',					},					{					xtype: 'selectfield',					cls: 'bt_selectfield',                    name: 'hashtag',                    label: 'Hashtag',					store: SocialSports.stores.HashTeamsStore,					displayField: 'hashtag',					valueField: 'hashtag'					},					{                    xtype: 'SocialSports.views.ErrorField',                    fieldname: 'hashtag',					},					{					xtype:'fieldset',					title: 'Nova Mensagem',					items: [{						xtype:'textareafield',						name: 'mensagem',						cls: 'bt_selectfield',						placeHolder: 'Introduza a sua mensagem aqui',						},							{						xtype: 'SocialSports.views.ErrorField',						fieldname: 'mensagem',						},					],					}				],			};					Ext.apply(this, {				scroll: 'vertical',				dockedItems: [buttonsave],				items: [ fields ],							/*	listeners: {					beforeactivate: function(){					var saveButton = this.down('#newMessageFormSaveButton');					}				} */			});					SocialSports.views.HomeNewMessage.superclass.initComponent.call(this);		},				onSaveAction: function(){				var model = new SocialSports.models.NewMessagesModel();    				//SocialSports.views.eventsForm.load(model);								//var model = this.getRecord();				//Ext.getCmp('messageform').reset();				Ext.dispatch({					controller: 'NewMessagesController',					action: 'save',					data: this.getValues(),					record: model,					form: this				}); 		},				showErrors: function(errors) {        var fieldset = this.down('#newMessageFormFieldset');        this.fields.each(function(field) {            var fieldErrors = errors.getByField(field.name);            if (fieldErrors.length > 0) {                var errorField = this.down('#'+field.name+'ErrorField');                field.addCls('invalid-field');                errorField.update(fieldErrors);                errorField.show();            } else {                this.resetField(field);            }        }, this);        fieldset.setInstructions("Deve introduzir uma mensagem antes de tentar enviá-la");    },    resetForm: function() {        var fieldset = this.down('#newMessageFormFieldset');        this.fields.each(function(field) {            this.resetField(field);        }, this);         fieldset.setInstructions(this.defaultInstructions);        this.reset();    },    resetField: function(field) {        var errorField = this.down('#'+field.name+'ErrorField');        errorField.hide();        field.removeCls('invalid-field');        return errorField;    }});	   Ext.reg('HomeNewMessage', SocialSports.views.HomeNewMessage);